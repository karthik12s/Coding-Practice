typedef pair<int,pair<int,int>> p;
    vector<int> mergeKArrays(vector<vector<int>> arr, int K)
    {
        //code here
        vector<int>v;
        // cout<<(arr).size()<<'\n';
        priority_queue<p,vector<p>,greater<p>>q;
        for(int i=0;i<K;i++){
            q.push(make_pair(arr[i][0],make_pair(i,0)));
            // cout<<arr[i][0]<<'\n';
        }
        while(!q.empty()){
            p c = q.top();
            q.pop();
            v.push_back(c.first);
            if(c.second.second<K-1){
                q.push(make_pair(arr[c.second.first][c.second.second+1],make_pair(c.second.first,c.second.second+1)));
            }
        }
        return v;
    }
